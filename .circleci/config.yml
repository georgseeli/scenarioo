version: 2
jobs:
  build:
    docker:
      # See https://circleci.com/docs/2.0/circleci-images/ ...
      - image: circleci/openjdk:8-jdk-browsers
      - image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
        environment:
          cluster.name: elasticsearch
          xpack.ml.enabled: false
          xpack.security.enabled: false
          ES_JAVA_OPTS: -Xms512m -Xmx512m
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Clean & install
          command: |
            mkdir -p test-results
            ./gradlew clean build -x test --no-daemon
      - run:
          name: Unit tests
          command: ./gradlew test -x scenarioo-client:npm_test --continue --no-daemon
      - run:
          name: JS tests
          command: ./gradlew scenarioo-client:npm_test --no-daemon
          when: always
      - run:
          name: JS/TS lint
          command: ./gradlew scenarioo-client:runLinter --no-daemon
          when: always
      - run:
          name: Archive Wikipedia example docu
          command: |
            pusd scenarioo-docu-generation-example/build/scenarioDocuExample
            zip -r ../../../exampleScenariooDocu.zip ./*
            popd
      - run:
          name: E2E tests
          command: |
            export SCENARIOO_DATA=./scenarioo-docu-generation-example/build/scenarioDocuExample
            java -Xms800m -Xmx800m -jar scenarioo-server/build/libs/scenarioo-latest.war > test-results/scenarioo-server.log || echo "Scenarioo server died. Exit code: $? see https://circleci.com/blog/how-to-handle-java-oom-errors/" >> test-results/scenarioo-server.log &
            export PROTRACTOR_BASE_URL=http://localhost:8080/scenarioo
            export SCENARIOO_TARGET_DIRECTORY="../e2eScenariooDocu"
            export BRANCH="$CIRCLE_BRANCH"
            export BUILD_NUMBER="$CIRCLE_BUILD_NUM"
            sleep 30  # Give server some time because of comparisons
            export GRADLE_OPTS="-Xms300m -Xmx300m"
            ./gradlew scenarioo-client:runE2eCircleCi --no-daemon
      - run:
          name: Collect test results
          command: |
            mkdir -p test-results/javascript
            cp -pR scenarioo-client/TESTS* test-results/javascript || true
            cp -pR scenarioo-client/test-reports test-results/e2e || true
            cp -pR scenarioo-server/build/test-results/test test-results/server || true
            cp -pR scenarioo-validator/build/test-results/test test-results/validator || true
            cp -pR scenarioo-docu-generation-example/build/test-results/test test-results/docu || true
          when: always
      - run:
          name: Publish docu on demo.scenarioo.org/scenarioo-develop
          command: |
            pushd e2eScenariooDocu
            zip -r ../e2eScenariooDocu.zip ./*
            popd
            curl -f --user scenarioo:$TOMCAT_USER_PASSWORD -F"file=@e2eScenariooDocu.zip" http://demo.scenarioo.org:8080/scenarioo-develop/rest/builds
          when: always
      - run:
          name: Checksum artifacts and move to dist folder for deploy job
          command: |
            mkdir -p dist
            mv e2eScenariooDocu.zip dist
            mv exampleScenariooDocu.zip dist
            mv scenarioo-server/build/libs/scenarioo-latest.war dist/scenarioo.war
            sha256sum dist/e2eScenariooDocu.zip | awk '{ print $1 }' > dist/e2eScenariooDocu.zip.sha256
            sha256sum dist/exampleScenariooDocu.zip | awk '{ print $1 }' > dist/exampleScenariooDocu.zip.sha256
            sha256sum dist/scenarioo.war | awk '{ print $1 }' > dist/scenarioo.war.sha256
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: /test-results
      - store_artifacts:
          path: dist
          destination: /
      # Unfortunately each workflow job has it's own build number. Therefore we need to persist this jobs number
      # here to use it during the deploy for getting the artifacts
      - run:
          name: Persist $CIRCLE_BUILD_NUM for deploy job
          command: echo "$CIRCLE_BUILD_NUM" >> BUILD_NUM
      - persist_to_workspace:
          root: .
          paths:
            - BUILD_NUM
  deploy:
    docker:
      # See https://circleci.com/docs/2.0/circleci-images/ ...
      - image: circleci/openjdk:8-jdk-browsers
    working_directory: ~/infra
    steps:
      # Add keys with write access to scenarioo-infrastructure:
      #  Add private key on Circle CI: https://circleci.com/gh/scenarioo/scenarioo/edit#ssh
      #  And public key on Github: https://github.com/scenarioo/scenarioo-infrastructure/settings/keys
      - add_ssh_keys:
            fingerprints:
              - "6c:90:aa:bc:f6:16:a2:10:0c:95:80:7a:b7:b7:3c:0f"
      - run:
          name: Checkout scenarioo-infrastructure
          command: |
            mkdir -p ~/.ssh
            sudo chmod 700 ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git clone -q git@github.com:scenarioo/scenarioo-infrastructure.git .
      - attach_workspace: &attach_workspace
          at: .
      - run:
          name: Deploy demo of branch
          command: |
            ./infra.sh deployDemo "$CIRCLE_BRANCH" "$(cat BUILD_NUM)" "$CIRCLE_USERNAME" "$CIRCLE_PULL_REQUEST" && rm BUILD_NUM
      - run:
          name: Commit and push
          command: |
            git config --global user.email "admin@scenarioo.org"
            git config --global user.name "CircleCI"
            git add demos overviewpage
            git diff
            git commit -m "Deploy demo for $CIRCLE_BRANCH  - Build: $CIRCLE_BUILD_URL by $CIRCLE_USERNAME"
            git push

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
